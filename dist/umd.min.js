/*
 * Copyright(c) 2014, Unional (https://github.com/unional)
 * @license Licensed under the MIT License (https://github.com/unional/unional/LICENSE)).
 * @version 0.4.10
 * Created by unional on 9/21/14.
 */
(function(root){"use strict";var contexts={};var contextCount=0;var definitions={};var STRIP_COMMENTS=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm;var ARGUMENT_NAMES=/([^\s,]+)/g;function getParamNames(func){var fnStr=func.toString().replace(STRIP_COMMENTS,"");var result=fnStr.slice(fnStr.indexOf("(")+1,fnStr.indexOf(")")).match(ARGUMENT_NAMES);if(result===null){result=[]}return result}if(typeof global!=="undefined"){root=global}function resolveModuleName(moduleName,paths){for(var path in paths){if(paths.hasOwnProperty(path)){var pathIndex=moduleName.indexOf(path);if(pathIndex===0){moduleName=moduleName.replace(path,paths[path])}}}return moduleName}function convertToBrowserGlobalIdentifier(moduleName,paths){return resolveModuleName(moduleName,paths).replace(/[\.\/]/g,".")}function wrapRequire(require,paths){return function(moduleName){return require(resolveModuleName(moduleName,paths))}}function wrapDefine(define,require,paths){return function(){if(arguments.length>0&&typeof arguments[0]==="function"){var definitionMethod=arguments[0];var params=getParamNames(definitionMethod);if(params.length>0&&params[0]==="require"){var currentContext=require.s.contexts._;var makeRequire=currentContext.makeRequire;currentContext.makeRequire=function(){var localRequire=makeRequire.apply(currentContext,arguments);return wrapRequire(localRequire,paths)};arguments[0]=params.length===1?function(require){currentContext.makeRequire=makeRequire;return definitionMethod.apply(currentContext,arguments)}:function(require,exports,module){currentContext.makeRequire=makeRequire;return definitionMethod.apply(currentContext,arguments)}}}define.apply(this,arguments)}}function deepMerge(target,source){var result={};var key;if(target&&typeof target==="object"){for(key in target){if(target.hasOwnProperty(key)){result[key]=target[key]}}}for(key in source){if(source.hasOwnProperty(key)){var value=source[key];if(typeof value!=="object"||!value){result[key]=value}else{if(!target[key]){result[key]=value}else{result[key]=deepMerge(target[key],value)}}}}return result}function stubRequire(deps,stubs,callback,errback){if(typeof arguments[1]==="function"){errback=arguments[2];callback=arguments[1];stubs=undefined}if(!Array.isArray(deps)){throw new Error("Dependencies must be an array.")}var require=umd.globalRequire;if(typeof require==="undefined"||require===umd.require){contextCount++;var stubContext="stub"+contextCount;var paths=contexts["default"].config.paths;var normalizedStubs={};var key;for(key in stubs){if(stubs.hasOwnProperty(key)){normalizedStubs[convertToBrowserGlobalIdentifier(key,paths)]=stubs[key]}}var context=contexts[stubContext]=new Context({stubs:normalizedStubs,paths:paths});context.modules=deepMerge(contexts["default"].modules);context.setReloadTargets(deps.map(function(dep){return convertToBrowserGlobalIdentifier(dep,paths)}));context.require(deps,callback,errback)}else if(require.defined){var map={};var hasStubs=false;for(key in stubs){if(stubs.hasOwnProperty(key)){hasStubs=true;var stubName="stub"+key+contextCount;map[key]=stubName;(function(key){var value=stubs[key];define(stubName,[],function(){return value})})(key)}}if(hasStubs){contextCount++;var contextName="context_"+contextCount;var _config=require.s.contexts._.config;var config={context:contextName,baseUrl:_config.baseUrl,paths:_config.paths,pkgs:_config.pkgs,shim:_config.shim};if(hasStubs){config.map={"*":map}}var result=require.config(config);var parentDefined=require.s.contexts._.defined;for(var m in parentDefined){if(parentDefined.hasOwnProperty(m)&&!map[m]&&deps.indexOf(m)===-1){require.s.contexts[contextName].defined[m]=parentDefined[m]}}result(deps,callback,errback)}else{for(key in deps){if(deps.hasOwnProperty(key))require.undef(deps[key])}require(deps,callback,errback)}}else{throw new Error("stubRequire not implemented for node.js yet.")}}function Context(config){this.reloadTargets=[];this.modules={};this.config=deepMerge({paths:{}},config);var self=this;function resolveChain(moduleNames,results){if(moduleNames.length===0){return}var moduleName=moduleNames.shift();self.resolveModule(moduleName,function(result){results.push(result);resolveChain(moduleNames,results)})}this.require=function require(moduleName,callback,errback){var error;if(!moduleName){error=new Error("moduleName can't be empty");if(errback){errback(error);return}else{throw error}}try{if(Array.isArray(moduleName)){var results=[];resolveChain(moduleName,results);if(results&&callback){callback.apply(this,results)}}else{return self.resolveModule(moduleName,callback,errback)}}catch(error){if(errback){errback(error)}throw error}};this.require.config=function requireConfig(option){option=option||{};var context=contexts["default"];if(option.context){context=contexts[option.context];if(!context){context=contexts[option.context]=new Context(option)}else{context.updateConfig(option)}}else{context.updateConfig(option)}return context.require};this.createDefine=function createDefine(registerFunc,identifier,paths){if(typeof registerFunc==="string"){paths=arguments[1];identifier=arguments[0];registerFunc=undefined}return function browserGlobalDefine(definition){var module={exports:{}};var result;if(typeof definition==="object"){result=definition}else{var localRequire;if(self.config.stubs&&self.config.stubs["require"]){localRequire=self.config.stubs["require"]}else if(paths){localRequire=wrapRequire(self.require,paths)}else{localRequire=self.require}result=definition(localRequire,module.exports,module);result=typeof result!=="undefined"?result:module.exports}if(registerFunc){registerFunc(identifier,result)}else if(identifier){definitions[identifier]=definition;if(self.reloadTargets.indexOf(identifier)===-1){var terms=identifier.split(/[.\/]/);var id=terms.pop();var base=umd.ns(terms.join("."));base[id]=result}self.modules[identifier]=result}}}}Context.prototype.updateConfig=function updateConfig(config){this.config=deepMerge(this.config,config)};Context.prototype.setReloadTargets=function setReloadTargets(deps){this.reloadTargets=deps};Context.prototype.resolveModule=function resolveModule(moduleName,callback,errback){var stubs=this.config.stubs||{};var paths=this.config.paths||{};var id=convertToBrowserGlobalIdentifier(moduleName,paths);if(stubs[id]){if(callback){callback(stubs[id])}return stubs[id]}if(this.reloadTargets.indexOf(id)!==-1){var definition=definitions[id];if(definition){this.createDefine(id)(definition)}}if(this.modules[id]){if(callback){callback(this.modules[id])}return this.modules[id]}var parts=moduleName.split("!",2);var arg=undefined;if(parts.length==2){moduleName=parts[0];if(parts[1]){arg=parts[1]}}var names=moduleName.split("/");var name=names.shift();if(paths[name]){var subNames=paths[name].split("/");names=subNames.concat(names);name=names.shift()}var module=root[name];while(module&&names.length){name=names.shift();module=module[name]}if(parts.length==2&&module&&typeof module.load==="function"){var onLoad=callback||function(value){module=value};onLoad.error=errback||function(){};module.load(arg,this.require,onLoad,this.config)}if(callback){callback(module)}return module};contexts["default"]=new Context;var umd=function(factory,registerFunc,identifier,paths,require,exports,module){if(arguments.length===6){if(typeof arguments[1]==="function"&&typeof arguments[2]==="string"){module=arguments[5];exports=arguments[4];require=arguments[3];paths=null}else if(typeof arguments[1]==="string"&&typeof arguments[2]==="object"){module=arguments[5];exports=arguments[4];require=arguments[3];paths=arguments[2];identifier=arguments[1];registerFunc=undefined}else{throw new Error("Invalid arguments.")}}else if(arguments.length===5){if(typeof arguments[1]==="string"){module=arguments[4];exports=arguments[3];require=arguments[2];paths=null;identifier=arguments[1];registerFunc=null}else if(typeof arguments[1]==="object"){module=arguments[4];exports=arguments[3];require=arguments[2];paths=arguments[1];identifier=null;registerFunc=null}else{throw new Error("Invalid arguments")}}else if(arguments.length===4){module=arguments[3];exports=arguments[2];require=arguments[1];paths=null;identifier=null;registerFunc=null}if(umd.isRequireJS()){var localDefine=paths&&paths.requireJS?wrapDefine(define,require,paths.requireJS):define;factory(localDefine)}else if(umd.isNodeJS()){factory(function(definition){var localRequire=paths&&paths.nodeJS?wrapRequire(require,paths.nodeJS):require;var result=typeof definition==="object"?definition:definition(localRequire,exports,module);if(typeof result!=="undefined"){module.exports=result}})}else{if(paths&&paths.browserGlobal){factory(umd.createDefine(registerFunc,identifier,paths.browserGlobal))}else{factory(umd.createDefine(registerFunc,identifier))}}};umd.namespace=function namespace(namespace){var result;for(var i=0,len=arguments.length;i<len;i++){namespace=arguments[i];var components=namespace.split(/[.\/]/);var component=components.shift();result=root[component]=root[component]||{};while(components.length){component=components.shift();result=result[component]=result[component]||{}}}return result};umd.ns=umd.namespace;umd.isRequireJS=function isRequireJS(){return typeof define==="function"&&define.amd!=undefined};umd.isNodeJS=function isNodeJS(){return typeof require==="function"&&typeof exports==="object"&&typeof module==="object"};umd.isBrowserGlobal=function isBrowserGlobal(){return!umd.isRequireJS()&&!umd.isNodeJS()};umd.stubRequire=stubRequire;umd.globalRequire=typeof require==="function"?require:root.require;umd.require=contexts["default"].require;umd.createDefine=contexts["default"].createDefine;if(typeof global!=="undefined"){global.umd=umd;module.exports=umd}else{root.umd=umd;root.require=root.require||undefined;root.module=root.module||undefined;root.exports=root.exports||undefined}})(this);